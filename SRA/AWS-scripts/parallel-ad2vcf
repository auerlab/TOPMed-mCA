#!/bin/sh -e

##########################################################################
#   Script description:
#       Run multiple ad2vcf.sh jobs together
#       
#   History:
#   Date        Name        Modification
#   2020-07-28              Begin
##########################################################################

usage()
{
    printf "Usage: $0 sample-file MAPQ-min\n"
    exit 1
}


##########################################################################
#   Main
##########################################################################

if [ $# != 2 ]; then
    usage
fi
sample_file=$1
mapq_min=$2

if ! echo $sample_file | grep -q -e '-[0-9][0-9]'; then
    printf "Sample file should end in - followed by 2 digits.\n"
    exit 1
fi
suffix=${sample_file##*-}

cd /home/ec2-user/Haplohseq-analysis/SRA
job_count=$(AWS-scripts/job-count)
vcf_dir=VCFs-$(basename $sample_file)
log_dir=$vcf_dir/Logs-MAPQ-$mapq_min
mkdir -p $log_dir
printf "Sample file = %s  Job count = %s  VCF-dir = %s\n" \
    $sample_file $job_count $vcf_dir > $log_dir/job-info

# Rebalance remaining samples if restarting: Only add sample to the list
# for each job if there is no output file in the Done directory.
while read line; do
    sample=$(echo $line | awk '{ print $1 }')
    if [ ! -e $vcf_dir/Done/combined.$sample-ad.vcf.xz ]; then
	echo $line >> $sample_file.remaining
    fi
done < $sample_file
prefix=$(basename $sample_file)-
split -d -n l/$job_count $sample_file.remaining $prefix
rm -f $sample_file.remaining

for file in ${prefix}[0-9][0-9]; do
    if [ -e $log_dir/$file.out ]; then
	printf "$log_dir/$file.out already exists.  Move or remove and try again.\n"
    elif [ $(cat $file | wc -l) != 0 ]; then
	echo $file
	nohup ./AWS-scripts/ad2vcf.sh $file $vcf_dir $mapq_min \
	    > $log_dir/$file.out 2> $log_dir/$file.err &
	# Offset fusera mounts
	sleep 1
    fi
done
top
