#!/usr/bin/env bash

###############################################################
# Derived from SRA's startup.sh from SDDB community AWS image
#
# The startup.sh provided as of Nov 2019 emits numerous errors
# and depends on a custom AWS image.
# 
# This script works with a standard Amazon Linux 2 AMI image
# and runs cleanly as of Nov 2019.
###############################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}

set -e
cd /root
echo Started : `date` > tools-setup.log

yum update -y
yum install -y mc gcc gcc-c++ gcc-gfortran java-1.8.0-openjdk-headless \
    git zlib-devel bzip2-devel libcurl-devel tcsh bind-utils \
    openssl-devel fuse.x86_64 ncurses-devel wget bzip2 yum-utils sysstat

# Interferes with pkg_install
yum remove xz-devel

cat << EOM > /etc/profile.d/zzz-bio.sh
if ! echo \$PATH | fgrep -q /usr/pkg/bin; then
    . /usr/pkg/etc/pkgsrc.sh
fi
for dir in \\
	/opt/sratoolkit.2.9.4-centos_linux64/bin \\
	/usr/local/bin; do
    if ! echo \$PATH | fgrep \$dir; then
	PATH=\${dir}:\$PATH
    fi
done
export PATH
EOM

if [ ! -e /opt/sratoolkit.2.9.4-centos_linux64 ]; then
    echo "----->" Install SRA toolkit
    wget -q https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.9.4/sratoolkit.2.9.4-centos_linux64.tar.gz
    tar xzf sratoolkit.2.9.4-centos_linux64.tar.gz
    rm -f sratoolkit.2.9.4-centos_linux64.tar.gz
    rm -rf /opt/sratoolkit.2.9.4-centos_linux64
    mv ./sratoolkit.2.9.4-centos_linux64 /opt
    # Script should be alphabetically after pkgsrc.sh and work whether or
    # not pkgsrc.sh is in /etc/profile.d
    chmod 755 /etc/profile.d/zzz-bio.sh
fi

mkdir -p /etc/ncbi

if [ ! -e /usr/local/bin/fusera ]; then
    echo "----->" Install Fusera
    curl -fsSLO https://raw.githubusercontent.com/mitre/fusera/master/install.sh
    bash install.sh
fi

bashrc=$HOME/.bashrc
if ! fgrep -q sratoolkit $bashrc; then
    cat << EOM >> $bashrc
export PATH=\${PATH}:/opt/sratoolkit.2.9.4-centos_linux64/bin:/usr/local/bin
EOM
fi

# Bootstrap pkgsrc
if [ ! -e /usr/pkg/bin/bmake ]; then
    cat << EOM

Installing pkgsrc package manager.  This process should take about 10 minutes.

Accept default responses for most questions (just press Enter).

You will need to answer the following explicitly:

1. Select "current" when prompted for a snapshot.
2. Select 'y' for 'Build all compiled packages with -march=native' if you
   want the fastest possible binaries.  Note that the binaries will not be
   portable to CPU architectures that lack some of the features of this one.

EOM
    pause
    rm -f auto-pkgsrc-setup     # Always fetch latest
    curl -O http://netbsd.org/~bacon/auto-pkgsrc-setup
    sh auto-pkgsrc-setup
fi

# Install tools needed for TOPMed ad2vcf
cat << EOM

Installing some tools needed for the TOPMed project.  Everything is built from
source and this takes about half an hour on a basic N1 GCP instance, but
should not need any attention from you.  Sit back and relax or go do something
else for a while.

EOM
pause

if [ ! -e /usr/pkgsrc/wip ]; then
    printf "Cloning pkgsrc-wip...\n"
    cd /usr/pkgsrc
    git clone git://wip.pkgsrc.org/pkgsrc-wip.git wip
else
    cd /usr/pkgsrc/wip
    git pull
fi
source /usr/pkg/etc/pkgsrc.sh
if [ ! -e /usr/pkg/sbin/auto-update-system ]; then
    cd /usr/pkgsrc/wip/auto-admin
    bmake clean clean-depends install clean clean-depends
fi
if [ ! -e /usr/pkg/bin/ape ]; then
    cd /usr/pkgsrc/wip/ape
    bmake clean clean-depends install clean clean-depends
fi

# Optimize computational tools
pkg_delete -r htslib biolibc || true
export CFLAGS="-Wall -O2 -march=native"
cd /usr/pkgsrc/biology/samtools
bmake clean clean-depends install clean clean-depends
cd /usr/pkgsrc/wip/ad2vcf
bmake clean clean-depends install clean clean-depends
unset CFLAGS

if [ ! -e /usr/pkg/sbin/iftop ]; then
    cd /usr/pkgsrc/net/iftop
    bmake clean clean-depends install clean clean-depends
fi
if [ ! -e /usr/pkg/etc/openssl/certs/mozilla-rootcert-0.pem ]; then
    cd /usr/pkgsrc/security/mozilla-rootcerts-openssl
    bmake clean clean-depends install clean clean-depends
fi

echo Finished : `date` >> tools-setup.log
needs-restarting
read -p 'Reboot? [y]/n ' reboot
if [ 0$reboot != 0n ]; then
    shutdown -r now
fi
